<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jiangxinsoft.scorpio.epm.mapper.EpmProjectTypeMapper">

	<resultMap id="modelResultMap" type="com.jiangxinsoft.scorpio.epm.model.EpmProjectType">
		<id column="TypeID" property="typeId" jdbcType="VARCHAR" />
		
		<result column="TypeName" property="typeName" jdbcType="VARCHAR" />
  		<result column="TypeRemark" property="typeRemark" jdbcType="VARCHAR" />
  		<result column="TypeOrder" property="typeOrder" jdbcType="INTEGER" />
  		
  		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP"/>
  		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>

	<!-- 表名 -->
	<sql id="tableNameSql">
		EPM_PROJECT_TYPE
	</sql>

	<!-- 按主键查找条件语句 -->
	<sql id="conditionOnlyId">
		TypeID = #{typeId}
	</sql>
	
	<insert id="insert" parameterType="com.jiangxinsoft.scorpio.epm.model.EpmProjectType">
		insert into
			<include refid="tableNameSql"/>
		(
			TypeID,
			
			TypeName,
			TypeRemark,
			TypeOrder,
			
			CreateTime,
			UpdateTime
		)
		values
		(
			#{typeId, jdbcType=VARCHAR} ,
			
			#{typeName, jdbcType=VARCHAR} ,
			#{typeRemark, jdbcType=VARCHAR} ,
			#{typeOrder, jdbcType=INTEGER} ,
			
			#{createTime, jdbcType=TIMESTAMP} ,
			#{updateTime, jdbcType=TIMESTAMP}
		)
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.jiangxinsoft.scorpio.epm.model.EpmProjectType">
		update
			<include refid="tableNameSql"/>
		set
		
			TypeName = #{typeName, jdbcType=VARCHAR} ,
			TypeRemark = #{typeRemark, jdbcType=VARCHAR} ,
			TypeOrder = #{typeOrder, jdbcType=INTEGER} ,
			
			UpdateTime = #{updateTime, jdbcType=TIMESTAMP}
			
		where <include refid="conditionOnlyId" />
	</update>
	
	<select id="selectByPrimaryKey" parameterType="String" resultMap="modelResultMap">
		select
			pt.TypeID as TypeID,
			
			pt.TypeName as TypeName,
			pt.TypeRemark as TypeRemark,
			pt.TypeOrder as TypeOrder
		from
			EPM_PROJECT_TYPE pt
		where
			pt.TypeID = #{typeId}
	</select>
	
	<select id="select" parameterType="hashMap" resultMap="modelResultMap">
		select
			pt.TypeID as TypeID,
       	
			pt.TypeName as TypeName,
			pt.TypeRemark as TypeRemark,
			pt.TypeOrder as TypeOrder
		from
			EPM_PROJECT_TYPE pt
		where
			1 = 1
		<if test="typeName != null and typeName != ''"> 
			and pt.TypeName like "%"#{typeName}"%"
		</if>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="String">
		delete from <include refid="tableNameSql"/> where <include refid="conditionOnlyId"/>
	</delete>
	
	<delete id="deleteByPrimaryKeys" parameterType="Object[]">
		delete from <include refid="tableNameSql"/> 
		where TypeID in <foreach index="index" item="item" collection="array" separator="," open="(" close=")" >#{item}</foreach>
	</delete>
	
</mapper>