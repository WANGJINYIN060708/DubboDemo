<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jiangxinsoft.scorpio.epm.mapper.EpmTaskInfoMapper">

	<resultMap id="modelResultMap" type="com.jiangxinsoft.scorpio.epm.model.EpmTaskInfo">
		<id column="TaskID" property="taskId" jdbcType="VARCHAR" />
		
		<result column="ProjectID" property="projectId" jdbcType="VARCHAR" />
		<result column="ParentID" property="parentId" jdbcType="VARCHAR" />
			
		<result column="TaskName" property="taskName" jdbcType="VARCHAR" />
  		<result column="TaskRemark" property="taskRemark" jdbcType="VARCHAR" />
  		
  		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP"/>
  		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>

	<!-- 表名 -->
	<sql id="tableNameSql">
		EPM_TASK_INFO
	</sql>

	<!-- 按主键查找条件语句 -->
	<sql id="conditionOnlyId">
		TaskID = #{taskId}
	</sql>
	
	<insert id="insert" parameterType="com.jiangxinsoft.scorpio.epm.model.EpmTaskInfo">
		insert into
			<include refid="tableNameSql"/>
		(
			TaskID,
			
			ProjectID,
			
			ParentID,
			
			TaskName,
			TaskRemark,
			
			CreateTime,
			UpdateTime
		)
		values
		(
			#{taskId, jdbcType=VARCHAR} ,
			
			#{projectId, jdbcType=VARCHAR} ,
			
			#{parentId, jdbcType=VARCHAR} ,
			
			#{taskName, jdbcType=VARCHAR} ,
			#{taskRemark, jdbcType=VARCHAR} ,
			
			#{createTime, jdbcType=TIMESTAMP} ,
			#{updateTime, jdbcType=TIMESTAMP}
		)
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.jiangxinsoft.scorpio.epm.model.EpmTaskInfo">
		update
			<include refid="tableNameSql"/>
		set
			ProjectID = #{projectId, jdbcType=VARCHAR} ,
			
			ParentID = #{parentId, jdbcType=VARCHAR} ,
		 	
			TaskName = #{taskName, jdbcType=VARCHAR} ,
			TaskRemark = #{taskRemark, jdbcType=VARCHAR} ,
			
			UpdateTime = #{updateTime, jdbcType=TIMESTAMP}
			
		where <include refid="conditionOnlyId" />
	</update>
	
	<select id="selectByPrimaryKey" parameterType="String" resultMap="modelResultMap">
		select
			m.TaskID as TaskID,
			
			m.ProjectID as ProjectID,
			
			m.ParentID as ParentID,
       	
			m.TaskName as TaskName,

			m.TaskRemark as TaskRemark
		from
			EPM_TASK_INFO m
		where
			m.TaskID = #{taskId}
	</select>
	
	<select id="countByParent" parameterType="String" resultType="Integer">
		select
			count(p.TaskID)
		from
			<include refid="tableNameSql"/> p
		where
			p.ParentID = #{parentId}
	</select>
	
	<select id="select" parameterType="hashMap" resultMap="modelResultMap">
		select
			m.TaskID as TaskID,
			
			m.ProjectID as ProjectID,
			
			m.ParentID as ParentID,
       	
			m.TaskName as TaskName,
			m.TaskRemark as TaskRemark,
			
			m.CreateTime as CreateTime,
			m.UpdateTime as UpdateTime
		from
			EPM_TASK_INFO m
		where
			1 = 1
			
		<if test="taskName != null and taskName != ''"> 
			and m.TaskName like "%"#{taskName}"%"
		</if>
		
		<if test="projectId != null and projectId != ''"> 
			and m.ProjectID = #{projectId}
		</if>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="String">
		delete from <include refid="tableNameSql"/> where <include refid="conditionOnlyId"/>
	</delete>
	
	<delete id="deleteByPrimaryKeys" parameterType="Object[]">
		delete from <include refid="tableNameSql"/> 
		where TaskID in <foreach index="index" item="item" collection="array" separator="," open="(" close=")" >#{item}</foreach>
	</delete>
	
</mapper>