<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jiangxinsoft.scorpio.knowledge.mapper.KnowModePrivateMapper">

	<resultMap id="modelResultMap" type="com.jiangxinsoft.scorpio.knowledge.model.KnowModePrivate">
		<id column="PrivateID" property="privateId" jdbcType="VARCHAR" />
		<result column="ModeID" property="modeId" jdbcType="VARCHAR" />	
		<result column="ModeName" property="modeName" jdbcType="VARCHAR" />	
		<result column="TypeID" property="typeId" jdbcType="VARCHAR" />	
		<result column="Author" property="author" jdbcType="VARCHAR" />	
  		<result column="UserID" property="userId" jdbcType="VARCHAR" />	
  		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />	
  		<result column="PrivateRemark" property="privateRemark" jdbcType="VARCHAR" />	
	</resultMap>

	<!-- 表名 -->
	<sql id="tableNameSql">
		KNOW_MODE_PRIVATE 
	</sql>

	<!-- 按主键查找条件语句 -->
	<sql id="conditionOnlyId">
		PrivateID = #{privateId}
	</sql>
	
	<insert id="insert" parameterType="com.jiangxinsoft.scorpio.knowledge.model.KnowModePrivate">
		insert into
			<include refid="tableNameSql"/>
		(
			PrivateID,	
			ModeID,
			UserID,
			CreateTime,
			PrivateRemark
		)
		values
		(
			#{privateId, jdbcType=VARCHAR} ,
			#{modeId, jdbcType=VARCHAR} ,
			#{userId, jdbcType=VARCHAR},
			#{createTime, jdbcType=TIMESTAMP},
			#{privateRemark, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.jiangxinsoft.scorpio.knowledge.model.KnowModePrivate">
		update
			<include refid="tableNameSql"/>
		set
			ModeID = #{modeId, jdbcType=VARCHAR} ,
			UserID =  #{userId, jdbcType=VARCHAR},
			PrivateRemark =  #{privateRemark, jdbcType=VARCHAR}
		where <include refid="conditionOnlyId" />
	</update>
	
	
	<select id="selectByPrimaryKey" parameterType="String" resultMap="modelResultMap">
		select
			kmg.PrivateID as PrivateID,
			
			kmg.ModeID as ModeID,
			km.ModeName as ModeName,
			
			km.TypeID as TypeID,
			km.Author as Author,
			kmg.UserID as UserID,
			kmg.CreateTime as CreateTime,
			kmg.PrivateRemark as PrivateRemark
		from
			know_mode km join know_mode_private kmg on km.modeID = kmg.modeID
		where
			kmg.UserID = #{userId}
	</select>
	
	<select id="selectByUserId" parameterType="String" resultMap="modelResultMap">
		select
			kmg.PrivateID as PrivateID,
			
			kmg.ModeID as ModeID,
			km.ModeName as ModeName,
			
			km.TypeID as TypeID,
			km.Author as Author,
			kmg.UserID as UserID,
			kmg.CreateTime as CreateTime,
			kmg.PrivateRemark as PrivateRemark
		from
			know_mode km join know_mode_private kmg on km.modeID = kmg.modeID
		where
			kmg.UserID = #{userId}
	</select>
	
	
	<select id="select" parameterType="hashMap" resultMap="modelResultMap">
		select
			kmg.PrivateID as PrivateID,
			
			kmg.ModeID as ModeID,
			kmg.UserID as UserID,
			kmg.CreateTime as CreateTime,
			kmg.PrivateRemark as PrivateRemark
	
		from
			KNOW_MODE_PRIVATE kmg
		where
			kmg.ModeID = #{modeId} and
			kmg.UserID = #{userId}
	</select>
	
	
	<delete id="deleteByPrimaryKey" parameterType="String">
		delete from <include refid="tableNameSql"/> where <include refid="conditionOnlyId"/>
	</delete>
	
	<delete id="deleteByPrimaryKeys" parameterType="Object[]">
		delete from <include refid="tableNameSql"/> 
		where PrivateID in <foreach index="index" item="item" collection="array" separator="," open="(" close=")" >#{item}</foreach>
	</delete>
	
</mapper>